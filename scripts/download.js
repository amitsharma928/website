webpackJsonp([3],{0:function(module,exports,__webpack_require__){eval("'use strict';\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }(); /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          * _scripts/download.js\nandles homepage payment and OS image downloading\nn\n/* global releaseTitle releaseVersion downloadRegion stripeKey */\n\nvar _promise = __webpack_require__(2);\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _analytics = __webpack_require__(13);\n\nvar _analytics2 = _interopRequireDefault(_analytics);\n\nvar _jquery = __webpack_require__(1);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _modal = __webpack_require__(19);\n\nvar _modal2 = _interopRequireDefault(_modal);\n\nvar _stripe = __webpack_require__(20);\n\nvar _stripe2 = _interopRequireDefault(_stripe);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_promise2.default.all([_analytics2.default, _jquery2.default, _stripe2.default, _modal2.default]).then(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 3);\n\n    var ga = _ref2[0];\n    var $ = _ref2[1];\n    var StripeCheckout = _ref2[2];\n\n    $(document).ready(function () {\n        // Set defaults\n        var paymentMinimum = 100; // Let's make the minimum $1 because of processing fees.\n        var currentButton = 'amount-ten'; // Default to $10 when the page loads.\n        var previousButton = 'amount-ten'; // Defaulting to $10 means it will be the first previous.\n\n        // ACTION: amountSelect: Track the current and previous amounts selected.\n        var amountSelect = function amountSelect(e) {\n            var targetID = $(e.target).attr('id'); // avoids null values vs native js\n            if (currentButton !== targetID) previousButton = currentButton;\n            currentButton = targetID;\n\n            $('.target-amount').removeClass('checked');\n            $('#' + currentButton).addClass('checked');\n\n            updateDownloadButton();\n        };\n        // Capture all .target-amount focuses\n        $('.target-amount').on('click focusin', amountSelect);\n\n        // ACTION: amountValidate: Check the vality of custom amount inputs.\n        var amountValidate = function amountValidate(event) {\n            var currentVal = $('#amount-custom').val();\n            var code = event.which || event.keyCode || event.charCode;\n            if (\n            // IS NOT a period or no period already.\n            (code !== 46 || currentVal.indexOf('.') !== -1) &&\n            // IS NOT a backspace, left arrow, or right arrow\n            [8, 37, 39].indexOf(code) === -1 && (\n            // IS NOT a number\n            code < 48 || code > 57)) {\n                // Prevent from happening\n                event.preventDefault();\n            }\n        };\n        $('#amount-custom').keypress(amountValidate);\n\n        // ACTION: amountBlur: Check the vality of custom amount inputs.\n        var amountBlur = function amountBlur() {\n            // If NOT valid OR empty.\n            var i = document.getElementById('amount-custom');\n            if (!i.validity.valid || i.value === '') {\n                // Remove existing checks.\n                $('.target-amount').removeClass('checked');\n                // Use the old button.\n                currentButton = previousButton;\n                // Set the old button as checked.\n                $('#' + currentButton).addClass('checked');\n                updateDownloadButton();\n            }\n        };\n        // Check Custom Amounts on Blur\n        $('#amount-custom').blur(amountBlur);\n\n        // ONLOAD & ACTION: updateDownloadButton: Change Button text based on resulting action\n        function updateDownloadButton() {\n            var translateDownload = $('#translate-download').text();\n            var translatePurchase = $('#translate-purchase').text();\n            // Catch case where no buttons are available because the user has already paid.\n            if ($('#amounts').children().length <= 1) {\n                $('#download').text(translateDownload);\n                // Catch case where a button is checked or the custom input is above the minimum.\n            } else if ($('button.payment-button').hasClass('checked') || $('#amount-custom').val() * 100 >= paymentMinimum || $('#amount-custom').val() === '') {\n                $('#download').text(translatePurchase);\n            } else {\n                $('#download').text(translateDownload);\n            }\n        }\n        $('#amounts').on('click', updateDownloadButton);\n        $('#amounts input').on('input', updateDownloadButton);\n        $(document).on('ready', updateDownloadButton);\n\n        // ACTION: #download.click: Either initiate a payment or open the download modal.\n        $('#download').click(function () {\n            console.log('Payment initiated with selection ' + currentButton);\n            var paymentAmount = $('#' + currentButton).val() * 100;\n            console.log('Starting payment for ' + paymentAmount);\n            // Free download\n            if (paymentAmount < paymentMinimum) {\n                if (window.ga) ga('send', 'event', releaseTitle + ' ' + releaseVersion + ' Download (Free)', 'Homepage', paymentAmount);\n                // Open the Download modal immediately.\n                openDownloadOverlay();\n                // Paid download\n            } else {\n                if (window.ga) ga('send', 'event', releaseTitle + ' ' + releaseVersion + ' Payment (Initiated)', 'Homepage', paymentAmount);\n                // Open the Stripe modal first.\n                doStripeCheckout(paymentAmount);\n            }\n        });\n\n        // UTILITY: detectStripeLanguage: Detect the language and use the Stripe translation if possible.\n        function detectStripeLanguage() {\n            var stripeLanguages = ['de', 'en', 'es', 'fr', 'it', 'jp', 'nl', 'zh'];\n            var languageCode = $('html').prop('lang');\n            // Stripe supports simplified chinese\n            if (/^zh_CN/.test(languageCode)) {\n                return 'zh';\n            }\n            if (stripeLanguages.indexOf(languageCode) !== -1) {\n                return languageCode;\n            }\n        }\n\n        // RETURN: doStripeCheckout: Open the Stripe modal to process payment.\n        function doStripeCheckout(amount) {\n            StripeCheckout.open({\n                key: stripeKey,\n                token: function token(_token) {\n                    console.log(JSON.parse(JSON.stringify(_token)));\n                    doStripePayment(amount, _token);\n                    openDownloadOverlay();\n                },\n                name: 'elementary LLC.',\n                description: releaseTitle + ' ' + releaseVersion,\n                bitcoin: true,\n                alipay: 'auto',\n                locale: detectStripeLanguage() || 'auto',\n                amount: amount\n            });\n        }\n\n        // ACTION: doStripePayment: Actually process the payment via Stripe\n        function doStripePayment(amount, token) {\n            var paymentHTTP, $amountTen;\n            $amountTen = $('#amount-ten');\n            if (window.ga) ga('send', 'event', releaseTitle + ' ' + releaseVersion + ' Payment (Actual)', 'Homepage', amount);\n            if ($amountTen.val() !== 0) {\n                $('#amounts').html('<input type=\"hidden\" id=\"amount-ten\" value=\"0\">');\n                $amountTen.each(amountSelect);\n                updateDownloadButton();\n            }\n            paymentHTTP = new XMLHttpRequest();\n            paymentHTTP.open('POST', './backend/payment.php', true);\n            paymentHTTP.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n            paymentHTTP.send('description=' + encodeURIComponent(releaseTitle + ' ' + releaseVersion) + '&amount=' + amount + '&token=' + token.id + '&email=' + encodeURIComponent(token.email)) + '&os=' + detectedOS;\n        }\n\n        // UTILITY: detectOS: Detect the OS\n        function detectOS() {\n            var ua = window.navigator.userAgent;\n            if (ua.indexOf('Android') >= 0) {\n                return 'Android';\n            }\n            if (ua.indexOf('Mac OS X') >= 0 && ua.indexOf('Mobile') >= 0) {\n                return 'iOS';\n            }\n            if (ua.indexOf('Windows') >= 0) {\n                return 'Windows';\n            }\n            if (ua.indexOf('Mac_PowerPC') >= 0 || ua.indexOf('Macintosh') >= 0) {\n                return 'OS X';\n            }\n            if (ua.indexOf('Linux') >= 0) {\n                return 'Linux';\n            }\n            return 'Other';\n        }\n        var detectedOS = detectOS();\n\n        // ACTION: .download-http.click: Track download over HTTP\n        if (window.ga) {\n            $('.download-link').click(function () {\n                ga('send', 'event', releaseTitle + ' ' + releaseVersion + ' Download (Architecture)', 'Homepage', '64-bit');\n                ga('send', 'event', releaseTitle + ' ' + releaseVersion + ' Download (OS)', 'Homepage', detectedOS);\n                ga('send', 'event', releaseTitle + ' ' + releaseVersion + ' Download (Region)', 'Homepage', downloadRegion);\n            });\n            $('.download-link.http').click(function () {\n                ga('send', 'event', releaseTitle + ' ' + releaseVersion + ' Download (Method)', 'Homepage', 'HTTP');\n            });\n            $('.download-link.magnet').click(function () {\n                ga('send', 'event', releaseTitle + ' ' + releaseVersion + ' Download (Method)', 'Homepage', 'magnet');\n            });\n        }\n\n        // RETURN: openDownloadOverlay: Open the Download modal.\n        function openDownloadOverlay() {\n            var $openModal;\n            $openModal = $('.open-modal');\n            console.log('Open the download overlay!');\n            $openModal.leanModal({\n                // Add this class to download buttons to make them close it.\n                closeButton: '.close-modal'\n            });\n            // This is what actually opens the modal overlay.\n            $openModal.click();\n        }\n\n        console.log('Loaded download.js');\n    });\n});\n\n/*****************\n ** WEBPACK FOOTER\n ** ./_scripts/download.js\n ** module id = 0\n ** module chunks = 3\n **/\n//# sourceURL=webpack:///./_scripts/download.js?")},19:function(module,exports,__webpack_require__){eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _promise = __webpack_require__(2);\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _scriptjs = __webpack_require__(5);\n\nvar _scriptjs2 = _interopRequireDefault(_scriptjs);\n\nvar _jquery = __webpack_require__(1);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _jquery2.default.then(function ($) {\n    return new _promise2.default(function (resolve, reject) {\n        (0, _scriptjs2.default)('https://cdn.jsdelivr.net/g/jquery.leanmodal2@2.5', function () {\n            console.log('jQuery.leanModal2 loaded');\n            return resolve(window.jQuery);\n        });\n    });\n}); /**\n     * _scripts/lib/modal.js\n     * Loads jQuery.leanModal2 from cdn address\n     *\n     * @exports {Promise} default - a promise of the jQuery with jQuery.leanModal2 loaded\n     */\n\n/*****************\n ** WEBPACK FOOTER\n ** ./_scripts/lib/modal.js\n ** module id = 19\n ** module chunks = 3 5\n **/\n//# sourceURL=webpack:///./_scripts/lib/modal.js?")},20:function(module,exports,__webpack_require__){eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _promise = __webpack_require__(2);\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _scriptjs = __webpack_require__(5);\n\nvar _scriptjs2 = _interopRequireDefault(_scriptjs);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * _scripts/lib/stripe.js\n * Loads stripe from official Stripe url\n *\n * @exports {Promise} default - a promise of the Stripe Checkout library\n */\n\nexports.default = new _promise2.default(function (resolve, reject) {\n    (0, _scriptjs2.default)('https://checkout.stripe.com/checkout.js', function () {\n        console.log('Stripe loaded');\n        return resolve(window.StripeCheckout);\n    });\n});\n\n/*****************\n ** WEBPACK FOOTER\n ** ./_scripts/lib/stripe.js\n ** module id = 20\n ** module chunks = 3 4\n **/\n//# sourceURL=webpack:///./_scripts/lib/stripe.js?")}});